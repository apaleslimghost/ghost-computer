generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Mention {
  id        Int   @id @default(autoincrement())
  postId    Int   @map("post_id")
  source    String?  @db.VarChar
  data      Json?
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamp(6)
  updatedAt DateTime @updatedAt @map("updated_at") @db.Timestamp(6)
  posts     Post     @relation(fields: [postId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_rails_4308a5edca")

  @@index([postId], map: "index_mentions_on_post_id")
  @@map("mentions")
}

model Post {
  id        Int    @id @default(autoincrement())
  title     String?   @db.VarChar
  body      String
  createdAt DateTime  @default(now()) @map("created_at") @db.Timestamp(6)
  updatedAt DateTime  @updatedAt @map("updated_at") @db.Timestamp(6)
  authorId  Int    @map("author_id")
  likes     Int       @default(0)
  mentions  Mention[]
  users     User      @relation(fields: [authorId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_rails_04d13ef8c7")
  tags      PostTag[]

  @@index([authorId], map: "index_posts_on_author_id")
  @@map("posts")
}

model PostTag {
  postId Int @map("post_id")
  tagId  Int @map("tag_id")
  post   Post   @relation(fields: [postId], references: [id])
  tag    Tag    @relation(fields: [tagId], references: [id])

  @@id([postId, tagId])
  @@index([postId], map: "index_posts_tags_on_post_id")
  @@index([tagId], map: "index_posts_tags_on_tag_id")
  @@map("posts_tags")
}

model Tag {
  id        Int    @id @default(autoincrement())
  name      String    @unique(map: "index_tags_on_name") @db.VarChar
  createdAt DateTime  @default(now()) @map("created_at") @db.Timestamp(6)
  updatedAt DateTime  @updatedAt @map("updated_at") @db.Timestamp(6)
  posts     PostTag[]

  @@map("tags")
}

model User {
  id             Int   @id @default(autoincrement())
  username       String   @db.VarChar
  passwordDigest String   @map("password_digest") @db.VarChar
  createdAt      DateTime @default(now()) @map("created_at") @db.Timestamp(6)
  updatedAt      DateTime @updatedAt @map("updated_at") @db.Timestamp(6)
  posts          Post[]

  @@map("users")
}

model active_storage_attachments {
  id                   Int               @id @default(autoincrement())
  name                 String               @db.VarChar
  record_type          String               @db.VarChar
  record_id            Int
  blob_id              Int
  createdAt            DateTime             @default(now()) @map("created_at") @db.Timestamp(6)
  active_storage_blobs active_storage_blobs @relation(fields: [blob_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_rails_c3b3935057")

  @@unique([record_type, record_id, name, blob_id], map: "index_active_storage_attachments_uniqueness")
  @@index([blob_id], map: "index_active_storage_attachments_on_blob_id")
}

model active_storage_blobs {
  id                             Int                           @id @default(autoincrement())
  key                            String                           @unique(map: "index_active_storage_blobs_on_key") @db.VarChar
  filename                       String                           @db.VarChar
  content_type                   String?                          @db.VarChar
  metadata                       String?
  service_name                   String                           @db.VarChar
  byte_size                      Int
  checksum                       String                           @db.VarChar
  createdAt                      DateTime                         @default(now()) @map("created_at") @db.Timestamp(6)
  active_storage_attachments     active_storage_attachments[]
  active_storage_variant_records active_storage_variant_records[]
}

model active_storage_postgresql_files {
  id  Int  @id @default(autoincrement())
  oid Int?    @db.Oid
  key String? @unique(map: "index_active_storage_postgresql_files_on_key") @db.VarChar
}

model active_storage_variant_records {
  id                   Int               @id @default(autoincrement())
  blob_id              Int
  variation_digest     String               @db.VarChar
  active_storage_blobs active_storage_blobs @relation(fields: [blob_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_rails_993965df05")

  @@unique([blob_id, variation_digest], map: "index_active_storage_variant_records_uniqueness")
}
